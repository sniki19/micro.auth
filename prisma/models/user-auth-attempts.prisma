model UserAuthAttempt {
  id String @id @default(uuid()) @db.Uuid

  rateLimitId    String         @map("rate_limit_id") @db.Uuid
  actionType     AuthActionType @map("action_type")
  ipAddress      String?        @map("ip_address")
  userId         String?        @map("user_id") @db.Uuid
  attempts       Int            @default(0)
  firstAttemptAt DateTime       @default(now()) @map("first_attempt_at")
  lastAttemptAt  DateTime?      @default(now()) @map("last_attempt_at")
  isBlocked      Boolean        @default(false) @map("is_blocked")
  blockReason    String?        @map("block_reason")
  blockExpiresAt DateTime?      @map("block_expires_at")

  createdAt DateTime @default(now()) @map("created_at")

  user      UserAuthCredentials? @relation(fields: [userId], references: [userId], map: "user_auth_attempts_auth_credentials_fkey")
  rateLimit RateLimit            @relation(fields: [rateLimitId], references: [id], map: "user_auth_attempts_rate_limits_fkey")

  @@map("user_auth_attempts")
}

enum AuthActionType {
  LOGIN
  PASSWORD_RESET
  TWO_FACTOR_VERIFICATION

  @@map("auth_action_type_enum")
}
