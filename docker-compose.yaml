name: micro_auth

networks:
  micro_network:
    driver: bridge
    external: true

volumes:
  db_micro_auth_si1:
    external: true

services:
  pga_phantom_koala:
    image: dpage/pgadmin4:latest
    container_name: pga_phantom_koala
    restart: unless-stopped
    ports:
      - 9555:80
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    # volumes:
    #   - pgadmin_viewer_si1:/var/lib/pgadmin
    networks:
      - micro_network

  db_runesteel_overlord:
    image: postgres:latest
    container_name: db_runesteel_overlord
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      TZ: UTC
      PGTZ: UTC
    ports:
      - ${DATABASE_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_micro_auth_si1:/var/lib/postgresql/data
    networks:
      - micro_network

  app_ninja_minotaur:
    image: ${APP_NAME}:latest
    container_name: app_ninja_minotaur
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${API_PORT}:${API_PORT}
    depends_on:
      db_runesteel_overlord:
        condition: service_healthy
        restart: true
    environment:
      API_PORT: ${API_PORT}
      NODE_ENV: production
      DATABASE_URL: postgresql://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}?schema=public&timezone=UTC
    networks:
      - micro_network
